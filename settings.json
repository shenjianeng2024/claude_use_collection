{
  "model": "opusplan",
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npm install)",
      "Bash(node:*)",
      "Bash(timeout:*)",
      "Bash(magick:*)",
      "Bash(convert:*)",
      "Bash(copy:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(find:*)",
      "Bash(cargo tauri:*)",
      "Bash(cargo check:*)",
      "Bash(grep:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm build:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git config:*)",
      "Bash(npm run build:*)",
      "Bash(npm run tauri:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm tauri:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm dlx shadcn@latest add:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm tauri:dev:*)",
      "Bash(pnpm build:*)",
      "Bash(flutter doctor:*)",
      "Bash(flutter pub add:*)",
      "Bash(flutter pub:*)",
      "Bash(flutter_rust_bridge_codegen generate:*)",
      "Bash(flutter_rust_bridge_codegen create-integration:*)",
      "Bash(flutter_rust_bridge_codegen:*)",
      "Bash(flutter analyze:*)",
      "Bash(flutter build:*)",
      "Bash(flutter test:*)",
      "Bash(cargo build:*)",
      "Bash(rustc --version)",
      "Bash(cargo --version)",
      "Bash(cargo install:*)",
      "Bash(chmod:*)",
      "Bash(cargo check:*)",
      "Bash(timeout 10 pnpm tauri:dev)",
      "Bash(timeout 12 pnpm tauri:dev)",
      "Bash(timeout 30 pnpm tauri:dev)",
      "Bash(timeout 60 pnpm tauri:dev)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(lsof:*)",
      "Bash(VITE_PORT=1421 pnpm tauri:dev)",
      "Bash(pnpm remove:*)",
      "Bash(pkill:*)",
      "Bash(git init:*)",
      "Bash(cat:*)",
      "Bash(curl:*)",
      "Bash(pnpm run:*)",
      "Bash(git remote set-url:*)",
      "Bash(find:*)",
      "Bash(gtimeout:*)",
      "WebSearch",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:upstash.com)",
      "WebFetch(domain:francpetracci.medium.com)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__filesystem__list_directory",
      "mcp__filesystem__read_multiple_files",
      "mcp__filesystem__read_text_file",
      "mcp__filesystem__edit_file",
      "mcp__filesystem__write_file",
      "mcp__thinking__sequentialthinking",
      "mcp__filesystem__create_directory"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "context7"
  ]
}